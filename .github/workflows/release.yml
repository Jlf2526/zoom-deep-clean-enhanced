name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write  # For creating GitHub releases
  id-token: write  # For PyPI trusted publishing

jobs:
  build_and_test:
    permissions:
      contents: read
      id-token: write
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine flake8
        pip install -r test-requirements.txt
    
    - name: Run tests before release
      run: |
        python -m pytest tests/ -v
    
    - name: Lint code
      run: |
        python -m flake8 zoom_deep_clean/ --max-line-length=88 --ignore=E203,W503
    
    - name: Build package
      run: |
        python -m build
    
    - name: Upload package artifact
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  publish:
    runs-on: ubuntu-latest
    needs: build_and_test
    permissions:
      contents: write
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download package artifact
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Extract version from tag
      id: extract_version
      run: |
        echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.extract_version.outputs.tag }}
        release_name: Release ${{ steps.extract_version.outputs.tag }}
        draft: false
        prerelease: false
        body: |
          ## Release ${{ steps.extract_version.outputs.tag }}
          
          ### Features & Improvements
          - Enhanced security validation
          - Comprehensive test coverage
          - Cross-platform compatibility improvements
          - Performance monitoring enhancements
          
          ### Installation
          ```bash
          pip install zoom-deep-clean-enhanced==${{ steps.extract_version.outputs.version }}
          ```
          
          ### Changelog
          See commit history for detailed changes.
        
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}